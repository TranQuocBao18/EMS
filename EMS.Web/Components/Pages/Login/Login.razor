@page "/login"
@using EMS.Model.Models
@using EMS.Model.Models.Others
@using EMS.Web.Authentication
@using EMS.Web.Components.Layout
@using Microsoft.AspNetCore.Components.Authorization
@layout EmptyLayout
@inject ApiClient ApiClient
@inject NavigationManager Navigation
@inject AuthenticationStateProvider AuthStateProvider

<PageTitle>Đăng nhập</PageTitle>

<div class="hold-transition login-page">
	<div class="login-box">
		<div class="login-logo">
			<a href="#"><b>EMS</b></a>
		</div>
		<div class="card">
			<div class="card-body login-card-body">
				<EditForm Model="loginModel" FormName="Login" OnValidSubmit="HandleLogin">
					<DataAnnotationsValidator />
					<div class="form-group">
						<label for="username">Username</label>
						<InputText id="username" class="form-control" @bind-Value="loginModel.Username" />
					</div>
					<div class="form-group">
						<label for="password">Password</label>
						<InputText id="password" class="form-control" type="password" @bind-Value="loginModel.Password" />
					</div>
					<button type="submit" class="btn btn-primary mt-3">Login</button>
				</EditForm>
			</div>
		</div>
	</div>
</div>

@code {
	private LoginModel loginModel = new LoginModel();
	[Inject]
	private IToastService ToastService { get; set; }

	private async Task HandleLogin()
	{
		try
		{
			var res = await ApiClient.PostAsync<LoginResponseModel, LoginModel>("/api/auth/login", loginModel);
			if (res != null && res.Token != null)
			{
				await ((CustomAuthStateProvider)AuthStateProvider).MarkUserAsAuthenticated(res);
				Navigation.NavigateTo("/");
			}
		}
		catch (ApiException ex)
		{
			ToastService.ShowError(ex.Message); // Hiển thị thông báo lỗi từ API
		}
	}
}
